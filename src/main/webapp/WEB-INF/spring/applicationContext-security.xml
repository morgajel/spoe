<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<http auto-config='true' use-expressions="true">
		<intercept-url pattern="/account/register**" access="permitAll" />
		<intercept-url pattern="/account/activate**" access="permitAll" />
		<intercept-url pattern="/account/user/**" access="permitAll" />
		<intercept-url pattern="/account/**" access="isAuthenticated()" />
		<intercept-url pattern="/**" access="permitAll" />
		<form-login default-target-url='/account' always-use-default-target='true' /> 
		<logout logout-success-url='/index.jsp?logout=success'/>

<!--		<session-management invalid-session-url="/errors/timeout.jsp"/>-->
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha">
				<!-- TODO: add salt -->
			</password-encoder>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from account where username=?"
				authorities-by-username-query="select a.username, r.name from role r, account_role ar, account a where (r.role_id=ar.role_id) and (ar.account_id=a.account_id) and (a.username=?)" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>  

